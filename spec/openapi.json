{"openapi":"3.1.0","info":{"title":"FastAPI","version":"0.1.0"},"paths":{"/contact/":{"post":{"tags":["contact"],"summary":"Post Contact","description":"Receives and processes a contact request.\n\n- Parses and validates the request body.\n- Checks for required fields.\n- Saves the contact to the database.\n- Returns the saved contact or an error message.\n\nArgs:\n    request (Request): FastAPI request object.\n    lang (str): Language code, injected via dependency. Usually a iso 2 code is used.\n    db (Session): Database session, injected via dependency.\n\nReturns:\n    SendingContact: The saved contact data.\n\nRaises:\n    HTTPException: On validation or database errors.","operationId":"post_contact_contact__post","responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SendingContact"}}}},"404":{"description":"Not found"}}}},"/education/":{"get":{"tags":["education"],"summary":"Get Education","description":"Retrieve education entries.\n\nArgs:\n    lang (str): Language code resolved by the get_language dependency (e.g. 'en', 'de', 'fr').\n    db (AsyncSession): Async SQLAlchemy session provided by dependency injection.\n\nReturns:\n    list[EducationRead]: A list of education items serialized with the EducationRead schema.\n\nNotes:\n    - This endpoint is read-only and publicly accessible.\n    - Pagination and filtering are not implemented here (can be added later if needed).","operationId":"get_education_education__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/EducationRead"},"type":"array","title":"Response Get Education Education  Get"}}}},"404":{"description":"Not found"}}},"post":{"tags":["education"],"summary":"Create Education","description":"Create a new education entry (admin only).\n\nArgs:\n    payload (EducationCreate): Payload validated against the EducationCreate schema.\n    lang (str): Language code for the content to be created.\n    db (AsyncSession): Async database session.\n    _admin: Injected current user (must be superuser) — used for authorization only.\n    response (Response): FastAPI Response object used to set headers.\n\nReturns:\n    EducationRead: The created education object serialized with the EducationRead schema.\n\nRaises:\n    HTTPException(500): If creation failed for any reason.\n\nNotes:\n    - On success, the response will include the 'Content-Language' header set to the requested language.","operationId":"create_education_education__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EducationCreate"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EducationRead"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/experience/":{"get":{"tags":["experience"],"summary":"Get Experiences","description":"Retrieves a list of experience entries.\n\nArgs:\n    lang (str): Language code, injected via dependency.\n    db (Session): Database session, injected via dependency.\n\nReturns:\n    list[Experience]: List of experience entries.","operationId":"get_experiences_experience__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ExperienceRead"},"type":"array","title":"Response Get Experiences Experience  Get"}}}},"404":{"description":"Not found"}}},"post":{"tags":["experience"],"summary":"Create Experience","description":"Create a new experience entry (admin only).\n\nArgs:\n    payload (ExperienceCreate): Payload validated against the ExperienceCreate schema.\n    lang (str): Language code for the content to be created.\n    db (AsyncSession): Async database session.\n    _admin: Injected current user (must be superuser) — used for authorization only.\n    response (Response): FastAPI Response object used to set headers.\n\nReturns:\n    ExperienceRead: The created experience object serialized with the ExperienceRead schema.\n\nRaises:\n    HTTPException(500): If creation failed for any reason.\n\nNotes:\n    - On success, the response will include the 'Content-Language' header set to the requested language.","operationId":"create_experience_experience__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExperienceCreate"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExperienceRead"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/expertise/":{"get":{"tags":["expertise"],"summary":"Get Expertises","description":"Retrieves a list of expertise entries.\n\nArgs:\n    lang (str): Language code, injected via dependency.\n    db (Session): Database session, injected via dependency.\n\nReturns:\n    list[Expertise]: List of expertise entries.","operationId":"get_expertises_expertise__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ExpertiseRead"},"type":"array","title":"Response Get Expertises Expertise  Get"}}}},"404":{"description":"Not found"}}},"post":{"tags":["expertise"],"summary":"Create Expertise","description":"Create a new expertise entry (admin only).\n\nArgs:\n    payload (ExpertiseCreate): Payload validated against the ExpertiseCreate schema.\n    lang (str): Language code for the content to be created.\n    db (AsyncSession): Async database session.\n    _admin: Injected current user (must be superuser) — used for authorization only.\n    response (Response): FastAPI Response object used to set headers.\n\nReturns:\n    ExpertiseRead: The created expertise object serialized with the ExpertiseRead schema.\n\nRaises:\n    HTTPException(500): If creation failed for any reason.\n\nNotes:\n    - On success, the response will include the 'Content-Language' header set to the requested language.","operationId":"create_expertise_expertise__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExpertiseCreate"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExpertiseRead"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/image/{image_id}":{"get":{"tags":["image"],"summary":"Get Image","description":"Retrieves an image file by its ID.\n\nArgs:\n    image_id (int): ID of the image.\n    db (Session): Database session, injected via dependency.\n\nReturns:\n    FileResponse: The image file.\n\nRaises:\n    HTTPException: If the image or file is not found.","operationId":"get_image_image__image_id__get","parameters":[{"name":"image_id","in":"path","required":true,"schema":{"type":"integer","title":"Image Id"}}],"responses":{"200":{"description":"Successful Response"},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/page/":{"get":{"tags":["page"],"summary":"Get Pages","description":"Retrieves a list of pages.\n\nArgs:\n    lang (str): Language code, injected via dependency.\n    db (Session): Database session, injected via dependency.\n\nReturns:\n    list[Page]: List of pages.","operationId":"get_pages_page__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Page"},"type":"array","title":"Response Get Pages Page  Get"}}}},"404":{"description":"Not found"}}}},"/page/{tech_key}":{"get":{"tags":["page"],"summary":"Get Page","description":"Retrieves a single page by its technical key.\n\nArgs:\n    tech_key (str): Technical key of the page.\n    lang (str): Language code, injected via dependency.\n    db (Session): Database session, injected via dependency.\n\nReturns:\n    Page: The requested page.\n\nRaises:\n    HTTPException: If the page is not found.","operationId":"get_page_page__tech_key__get","parameters":[{"name":"tech_key","in":"path","required":true,"schema":{"type":"string","title":"Tech Key"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Page"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/personal-details/":{"get":{"tags":["personal-details"],"summary":"Get Personal Details","description":"Retrieves personal details.\n\nArgs:\n    lang (str): Language code, injected via dependency.\n    db (Session): Database session, injected via dependency.\n\nReturns:\n    PersonalDetails: Detailed personal information.\n\nRaises:\n    HTTPException: If no personal details are found.","operationId":"get_personal_details_personal_details__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PersonalDetails"}}}},"404":{"description":"Not found"}}}},"/personal-information/":{"get":{"tags":["personal-information"],"summary":"Get Personal Information","description":"Retrieves a list of personal information entries.\n\nArgs:\n    lang (str): Language code, injected via dependency.\n    db (Session): Database session, injected via dependency.\n\nReturns:\n    list[PersonalInformation]: List of personal information entries.","operationId":"get_personal_information_personal_information__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/PersonalInformation"},"type":"array","title":"Response Get Personal Information Personal Information  Get"}}}},"404":{"description":"Not found"}}}},"/social-media/":{"get":{"tags":["social media"],"summary":"Get Social Medias","description":"Retrieves a list of social media entries.\n\nArgs:\n    db (Session): Database session, injected via dependency.\n\nReturns:\n    list[SocialMedia]: List of social media links.","operationId":"get_social_medias_social_media__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/SocialMediaRead"},"type":"array","title":"Response Get Social Medias Social Media  Get"}}}},"404":{"description":"Not found"}}},"post":{"tags":["social media"],"summary":"Create Social Media","description":"Create a new education entry (admin only).","operationId":"create_social_media_social_media__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SocialMediaCreate"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SocialMediaRead"}}}},"404":{"description":"Not found"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/work/":{"get":{"tags":["work"],"summary":"Get Works","description":"Retrieves a list of work entries.\n\nArgs:\n    lang (str): Language code, injected via dependency.\n    db (Session): Database session, injected via dependency.\n\nReturns:\n    list[Work]: List of work items.","operationId":"get_works_work__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Work"},"type":"array","title":"Response Get Works Work  Get"}}}},"404":{"description":"Not found"}}}},"/auth/jwt/login":{"post":{"tags":["auth"],"summary":"Auth:Jwt.Login","operationId":"auth_jwt_login_auth_jwt_login_post","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Body_auth_jwt_login_auth_jwt_login_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BearerResponse"},"example":{"access_token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiOTIyMWZmYzktNjQwZi00MzcyLTg2ZDMtY2U2NDJjYmE1NjAzIiwiYXVkIjoiZmFzdGFwaS11c2VyczphdXRoIiwiZXhwIjoxNTcxNTA0MTkzfQ.M10bjOe45I5Ncu_uXvOmVV8QxnL-nZfcH96U90JaocI","token_type":"bearer"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorModel"},"examples":{"LOGIN_BAD_CREDENTIALS":{"summary":"Bad credentials or the user is inactive.","value":{"detail":"LOGIN_BAD_CREDENTIALS"}},"LOGIN_USER_NOT_VERIFIED":{"summary":"The user is not verified.","value":{"detail":"LOGIN_USER_NOT_VERIFIED"}}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/auth/jwt/logout":{"post":{"tags":["auth"],"summary":"Auth:Jwt.Logout","operationId":"auth_jwt_logout_auth_jwt_logout_post","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"401":{"description":"Missing token or inactive user."}},"security":[{"OAuth2PasswordBearer":[]}]}},"/auth/register":{"post":{"tags":["auth"],"summary":"Register:Register","operationId":"register_register_auth_register_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserCreate"}}},"required":true},"responses":{"201":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRead"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorModel"},"examples":{"REGISTER_USER_ALREADY_EXISTS":{"summary":"A user with this email already exists.","value":{"detail":"REGISTER_USER_ALREADY_EXISTS"}},"REGISTER_INVALID_PASSWORD":{"summary":"Password validation failed.","value":{"detail":{"code":"REGISTER_INVALID_PASSWORD","reason":"Password should beat least 3 characters"}}}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/auth/forgot-password":{"post":{"tags":["auth"],"summary":"Reset:Forgot Password","operationId":"reset_forgot_password_auth_forgot_password_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Body_reset_forgot_password_auth_forgot_password_post"}}},"required":true},"responses":{"202":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/auth/reset-password":{"post":{"tags":["auth"],"summary":"Reset:Reset Password","operationId":"reset_reset_password_auth_reset_password_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Body_reset_reset_password_auth_reset_password_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorModel"},"examples":{"RESET_PASSWORD_BAD_TOKEN":{"summary":"Bad or expired token.","value":{"detail":"RESET_PASSWORD_BAD_TOKEN"}},"RESET_PASSWORD_INVALID_PASSWORD":{"summary":"Password validation failed.","value":{"detail":{"code":"RESET_PASSWORD_INVALID_PASSWORD","reason":"Password should be at least 3 characters"}}}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/auth/request-verify-token":{"post":{"tags":["auth"],"summary":"Verify:Request-Token","operationId":"verify_request_token_auth_request_verify_token_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Body_verify_request_token_auth_request_verify_token_post"}}},"required":true},"responses":{"202":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/auth/verify":{"post":{"tags":["auth"],"summary":"Verify:Verify","operationId":"verify_verify_auth_verify_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Body_verify_verify_auth_verify_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRead"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorModel"},"examples":{"VERIFY_USER_BAD_TOKEN":{"summary":"Bad token, not existing user ornot the e-mail currently set for the user.","value":{"detail":"VERIFY_USER_BAD_TOKEN"}},"VERIFY_USER_ALREADY_VERIFIED":{"summary":"The user is already verified.","value":{"detail":"VERIFY_USER_ALREADY_VERIFIED"}}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users/me":{"get":{"tags":["users"],"summary":"Users:Current User","operationId":"users_current_user_users_me_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRead"}}}},"401":{"description":"Missing token or inactive user."}},"security":[{"OAuth2PasswordBearer":[]}]},"patch":{"tags":["users"],"summary":"Users:Patch Current User","operationId":"users_patch_current_user_users_me_patch","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserUpdate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRead"}}}},"401":{"description":"Missing token or inactive user."},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorModel"},"examples":{"UPDATE_USER_EMAIL_ALREADY_EXISTS":{"summary":"A user with this email already exists.","value":{"detail":"UPDATE_USER_EMAIL_ALREADY_EXISTS"}},"UPDATE_USER_INVALID_PASSWORD":{"summary":"Password validation failed.","value":{"detail":{"code":"UPDATE_USER_INVALID_PASSWORD","reason":"Password should beat least 3 characters"}}}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/users/{id}":{"get":{"tags":["users"],"summary":"Users:User","operationId":"users_user_users__id__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string","title":"Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRead"}}}},"401":{"description":"Missing token or inactive user."},"403":{"description":"Not a superuser."},"404":{"description":"The user does not exist."},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"patch":{"tags":["users"],"summary":"Users:Patch User","operationId":"users_patch_user_users__id__patch","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string","title":"Id"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserUpdate"}}}},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRead"}}}},"401":{"description":"Missing token or inactive user."},"403":{"description":"Not a superuser."},"404":{"description":"The user does not exist."},"400":{"content":{"application/json":{"examples":{"UPDATE_USER_EMAIL_ALREADY_EXISTS":{"summary":"A user with this email already exists.","value":{"detail":"UPDATE_USER_EMAIL_ALREADY_EXISTS"}},"UPDATE_USER_INVALID_PASSWORD":{"summary":"Password validation failed.","value":{"detail":{"code":"UPDATE_USER_INVALID_PASSWORD","reason":"Password should beat least 3 characters"}}}},"schema":{"$ref":"#/components/schemas/ErrorModel"}}},"description":"Bad Request"},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["users"],"summary":"Users:Delete User","operationId":"users_delete_user_users__id__delete","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string","title":"Id"}}],"responses":{"204":{"description":"Successful Response"},"401":{"description":"Missing token or inactive user."},"403":{"description":"Not a superuser."},"404":{"description":"The user does not exist."},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"Address":{"properties":{"id":{"type":"integer","title":"Id"},"street":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Street"},"number":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Number"},"zip":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Zip"},"city":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"City"},"country":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Country"}},"type":"object","required":["id"],"title":"Address","description":"Extended model for an address with additional optional fields.\n\nAttributes:\n    street (str | None): The street name.\n    number (int | None): The house or building number.\n    zip (int | None): The postal code.\n    city (str | None): The city name.\n    country (str | None): The country name."},"BearerResponse":{"properties":{"access_token":{"type":"string","title":"Access Token"},"token_type":{"type":"string","title":"Token Type"}},"type":"object","required":["access_token","token_type"],"title":"BearerResponse"},"Body_auth_jwt_login_auth_jwt_login_post":{"properties":{"grant_type":{"anyOf":[{"type":"string","pattern":"^password$"},{"type":"null"}],"title":"Grant Type"},"username":{"type":"string","title":"Username"},"password":{"type":"string","format":"password","title":"Password"},"scope":{"type":"string","title":"Scope","default":""},"client_id":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Client Id"},"client_secret":{"anyOf":[{"type":"string"},{"type":"null"}],"format":"password","title":"Client Secret"}},"type":"object","required":["username","password"],"title":"Body_auth_jwt_login_auth_jwt_login_post"},"Body_reset_forgot_password_auth_forgot_password_post":{"properties":{"email":{"type":"string","format":"email","title":"Email"}},"type":"object","required":["email"],"title":"Body_reset_forgot_password_auth_forgot_password_post"},"Body_reset_reset_password_auth_reset_password_post":{"properties":{"token":{"type":"string","title":"Token"},"password":{"type":"string","title":"Password"}},"type":"object","required":["token","password"],"title":"Body_reset_reset_password_auth_reset_password_post"},"Body_verify_request_token_auth_request_verify_token_post":{"properties":{"email":{"type":"string","format":"email","title":"Email"}},"type":"object","required":["email"],"title":"Body_verify_request_token_auth_request_verify_token_post"},"Body_verify_verify_auth_verify_post":{"properties":{"token":{"type":"string","title":"Token"}},"type":"object","required":["token"],"title":"Body_verify_verify_auth_verify_post"},"Category":{"properties":{"id":{"type":"integer","title":"Id"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"}},"type":"object","required":["id"],"title":"Category","description":"Extended schema for a category.\n\nAttributes:\n    name (str | None): The name of the category. This is optional and can be None."},"EducationCreate":{"properties":{"start_date":{"anyOf":[{"type":"string","format":"date"},{"type":"null"}],"title":"Start Date"},"end_date":{"anyOf":[{"type":"string","format":"date"},{"type":"null"}],"title":"End Date"},"degree":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Degree"},"grade":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Grade"},"institution_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Institution Id"},"course_of_study":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Course Of Study"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"}},"type":"object","title":"EducationCreate","description":"Schema used to create a new Education record together with its\nlocalized fields.\n\nNote: The language is taken from the request dependency (`get_language`)."},"EducationRead":{"properties":{"id":{"type":"integer","title":"Id"},"degree":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Degree"},"grade":{"anyOf":[{"type":"number"},{"type":"null"}],"title":"Grade"},"start_date":{"anyOf":[{"type":"string","format":"date"},{"type":"null"}],"title":"Start Date"},"end_date":{"anyOf":[{"type":"string","format":"date"},{"type":"null"}],"title":"End Date"},"course_of_study":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Course Of Study"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"university":{"anyOf":[{"$ref":"#/components/schemas/Institution"},{"type":"null"}]}},"type":"object","required":["id"],"title":"EducationRead","description":"Extended model for an education record with additional fields.\n\nAttributes:\n    degree (str | None): The degree obtained (e.g., Bachelor's, Master's).\n    grade (float | None): The grade achieved.\n    start_date (datetime.date | None): The start date of the education.\n    end_date (datetime.date | None): The end date of the education.\n    course_of_study (str | None): The course of study or major.\n    description (str | None): A description of the education.\n    university (Institution | None): The associated university, represented as an `Institution` object."},"ErrorModel":{"properties":{"detail":{"anyOf":[{"type":"string"},{"additionalProperties":{"type":"string"},"type":"object"}],"title":"Detail"}},"type":"object","required":["detail"],"title":"ErrorModel"},"ExperienceCreate":{"properties":{"url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Url"},"start_date":{"anyOf":[{"type":"string","format":"date"},{"type":"null"}],"title":"Start Date"},"end_date":{"anyOf":[{"type":"string","format":"date"},{"type":"null"}],"title":"End Date"},"institution_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Institution Id"},"title":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Title"},"extract":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Extract"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"industry":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Industry"}},"type":"object","title":"ExperienceCreate","description":"Schema used to create a new Experience record together with its\nlocalized fields.\n\nNote: The language is taken from the request dependency (`get_language`)."},"ExperienceRead":{"properties":{"id":{"type":"integer","title":"Id"},"title":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Title"},"extract":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Extract"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"industry":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Industry"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Url"},"start_date":{"anyOf":[{"type":"string","format":"date"},{"type":"null"}],"title":"Start Date"},"end_date":{"anyOf":[{"type":"string","format":"date"},{"type":"null"}],"title":"End Date"},"company":{"anyOf":[{"$ref":"#/components/schemas/Institution"},{"type":"null"}]}},"type":"object","required":["id"],"title":"ExperienceRead","description":"Extended model for an experience record with additional fields.\n\nAttributes:\n    title (str | None): The title of the experience.\n    extract (str | None): A short summary or extract of the experience.\n    description (str | None): A detailed description of the experience.\n    industry (str | None): The industry associated with the experience.\n    url (str | None): A URL related to the experience (e.g., company website).\n    start_date (datetime.date | None): The start date of the experience.\n    end_date (datetime.date | None): The end date of the experience.\n    company (Institution | None): The associated company, represented as an `Institution` object."},"ExpertiseCreate":{"properties":{"title":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Title"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"icon":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Icon"},"sort":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Sort"}},"type":"object","title":"ExpertiseCreate","description":"Schema used to create a new Expertise record together with its\nlocalized fields.\n\nNote: The language is taken from the request dependency (`get_language`)."},"ExpertiseRead":{"properties":{"id":{"type":"integer","title":"Id"},"title":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Title"},"description":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Description"},"icon":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Icon"},"sort":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Sort"}},"type":"object","required":["id"],"title":"ExpertiseRead","description":"Full model for an expertise record.\n\nAttributes:\n    expertise (str | None): The name or title of the expertise.\n    description (str | None): A textual description of the expertise.\n    icon (str | None): The icon associated with the expertise."},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"Institution":{"properties":{"id":{"type":"integer","title":"Id"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"address":{"anyOf":[{"$ref":"#/components/schemas/Address"},{"type":"null"}]}},"type":"object","required":["id"],"title":"Institution","description":"Extended model for an institution with additional fields.\n\nAttributes:\n    name (str | None): The name of the institution.\n    address (Address | None): The address of the institution, represented as an `Address` object."},"Page":{"properties":{"id":{"type":"integer","title":"Id"},"tech_key":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Tech Key"},"title":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Title"},"abstract":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Abstract"},"html":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Html"},"creation_date":{"anyOf":[{"type":"string","format":"date"},{"type":"null"}],"title":"Creation Date"}},"type":"object","required":["id"],"title":"Page","description":"Extended model for a page with additional fields.\n\nAttributes:\n    tech_key (str | None): A technical key for identifying the page.\n    title (str | None): The title of the page.\n    abstract (str | None): A brief abstract or summary of the page.\n    html (str | None): The HTML content of the page.\n    creation_date (datetime.date | None): The creation date of the page."},"PersonalDetails":{"properties":{"id":{"type":"integer","title":"Id"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"position":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Position"},"abstract":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Abstract"},"profile_picture_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Profile Picture Id"}},"type":"object","required":["id"],"title":"PersonalDetails","description":"Extended model for personal details with additional fields.\n\nAttributes:\n    name (str | None): The name of the individual.\n    position (str | None): The position or title of the individual.\n    abstract (str | None): A brief abstract or summary about the individual."},"PersonalInformation":{"properties":{"id":{"type":"integer","title":"Id"},"label":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Label"},"value":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Value"},"icon":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Icon"}},"type":"object","required":["id"],"title":"PersonalInformation","description":"Extended model for personal information with additional fields.\n\nAttributes:\n    label (str | None): The label or key for the personal information.\n    value (str | None): The value or content of the personal information.\n    icon (str | None): The icon associated with the personal information."},"SendingContact":{"properties":{"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"email":{"anyOf":[{"type":"string","format":"email"},{"type":"null"}],"title":"Email"},"message":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Message"}},"type":"object","title":"SendingContact","description":"    "},"SocialMediaCreate":{"properties":{"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Url"},"color":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Color"},"path":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Path"}},"type":"object","title":"SocialMediaCreate","description":"Extended model for a social media record with additional fields.\n\nAttributes:\n    name (str | None): The name of the social media platform.\n    url (str | None): The URL of the social media platform.\n    color (str | None): The color associated with the platform (e.g., branding color).\n    path (str | None): The path or icon name for the platform."},"SocialMediaRead":{"properties":{"id":{"type":"integer","title":"Id"},"name":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Name"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Url"},"color":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Color"},"path":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Path"}},"type":"object","required":["id"],"title":"SocialMediaRead","description":"Extended model for a social media record with additional fields.\n\nAttributes:\n    name (str | None): The name of the social media platform.\n    url (str | None): The URL of the social media platform.\n    color (str | None): The color associated with the platform (e.g., branding color).\n    path (str | None): The path or icon name for the platform."},"UserCreate":{"properties":{"email":{"type":"string","format":"email","title":"Email"},"password":{"type":"string","title":"Password"},"is_active":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Is Active","default":true},"is_superuser":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Is Superuser","default":false},"is_verified":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Is Verified","default":false}},"type":"object","required":["email","password"],"title":"UserCreate"},"UserRead":{"properties":{"id":{"type":"string","format":"uuid","title":"Id"},"email":{"type":"string","format":"email","title":"Email"},"is_active":{"type":"boolean","title":"Is Active","default":true},"is_superuser":{"type":"boolean","title":"Is Superuser","default":false},"is_verified":{"type":"boolean","title":"Is Verified","default":false}},"type":"object","required":["id","email"],"title":"UserRead"},"UserUpdate":{"properties":{"password":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Password"},"email":{"anyOf":[{"type":"string","format":"email"},{"type":"null"}],"title":"Email"},"is_active":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Is Active"},"is_superuser":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Is Superuser"},"is_verified":{"anyOf":[{"type":"boolean"},{"type":"null"}],"title":"Is Verified"}},"type":"object","title":"UserUpdate"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"},"Work":{"properties":{"id":{"type":"integer","title":"Id"},"title":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Title"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Url"},"thumbnail_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"title":"Thumbnail Id"},"categories":{"anyOf":[{"items":{"$ref":"#/components/schemas/Category"},"type":"array"},{"type":"null"}],"title":"Categories"}},"type":"object","required":["id"],"title":"Work","description":"Extended model for a work record.\n\nAttributes:\n    title (str | None): The title of the work.\n    url (str | None): The URL associated with the work.\n    thumbnail (str | None): The thumbnail image URL for the work.\n    categories (list[Category] | None): A list of categories associated with the work."}},"securitySchemes":{"OAuth2PasswordBearer":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"auth/jwt/login"}}}}}}