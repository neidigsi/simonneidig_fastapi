{
	"info": {
		"_postman_id": "20961b0d-bf53-445d-ad18-4f6f31d69009",
		"name": "Automated Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9159996"
	},
	"item": [
		{
			"name": "Contact",
			"item": [
				{
					"name": "Single",
					"item": [
						{
							"name": "POST",
							"item": [
								{
									"name": "DE",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Contact / Single / POST / DE / Successful request - Status code is 201\", function () {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"pm.test(\"Contact / Single / POST / DE / Successful request - Attribute 'name' correctly returned\", function () {",
															"    pm.expect(body.name).to.eql('Testuser');",
															"});",
															"",
															"pm.test(\"Contact / Single / POST / DE / Successful request - Attribute 'email' correctly returned\", function () {",
															"    pm.expect(body.email).to.eql('test@simon-neidig.de');",
															"});",
															"",
															"pm.test(\"Contact / Single / POST / DE / Successful request - Attribute 'message' correctly returned\", function () {",
															"    pm.expect(body.message).to.eql('This is a test message.');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Language",
														"value": "de",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Testuser\",\n    \"email\": \"test@simon-neidig.de\",\n    \"message\": \"This is a test message.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{contact-endpoint}}",
													"host": [
														"{{contact-endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "No name",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Contact / Single / POST / DE / No name - Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Contact / Single / POST / DE / No name - Error message as expected\", function () {",
															"    pm.expect(body.detail).to.eql('All fields (name, email, message) are required.');",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Language",
														"value": "de",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"test@simon-neidig.de\",\n    \"message\": \"This is a test message.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{contact-endpoint}}",
													"host": [
														"{{contact-endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "No email",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Contact / Single / POST / DE / No email - Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Contact / Single / POST / DE / No email - Error message as expected\", function () {",
															"    pm.expect(body.detail).to.eql('All fields (name, email, message) are required.');",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Language",
														"value": "de",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Testuser\",\n    \"message\": \"This is a test message.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{contact-endpoint}}",
													"host": [
														"{{contact-endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Invalid email",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Contact / Single / POST / DE / Invalid email - Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Contact / Single / POST / DE / Invalid email - Error message as expected\", function () {",
															"    pm.expect(body.detail).to.eql('value is not a valid email address: An email address must have an @-sign.');",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Language",
														"value": "de",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Testuser\",\n    \"email\": \"test\",\n    \"message\": \"This is a test message.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{contact-endpoint}}",
													"host": [
														"{{contact-endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "No message",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Contact / Single / POST / DE / No message - Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Contact / Single / POST / DE / No message - Error message as expected\", function () {",
															"    pm.expect(body.detail).to.eql('All fields (name, email, message) are required.');",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Language",
														"value": "de",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Testuser\",\n    \"email\": \"test@simon-neidig.de\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{contact-endpoint}}",
													"host": [
														"{{contact-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "EN",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Contact / Single / POST / EN / Successful request - Status code is 201\", function () {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"pm.test(\"Contact / Single / POST / EN / Successful request - Attribute 'name' correctly returned\", function () {",
															"    pm.expect(body.name).to.eql('Testuser');",
															"});",
															"",
															"pm.test(\"Contact / Single / POST / EN / Successful request - Attribute 'email' correctly returned\", function () {",
															"    pm.expect(body.email).to.eql('test@simon-neidig.de');",
															"});",
															"",
															"pm.test(\"Contact / Single / POST / EN / Successful request - Attribute 'message' correctly returned\", function () {",
															"    pm.expect(body.message).to.eql('This is a test message.');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Language",
														"value": "en",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Testuser\",\n    \"email\": \"test@simon-neidig.de\",\n    \"message\": \"This is a test message.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{contact-endpoint}}",
													"host": [
														"{{contact-endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "No name",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Contact / Single / POST / EN / No name - Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Contact / Single / POST / EN / No name - Error message as expected\", function () {",
															"    pm.expect(body.detail).to.eql('All fields (name, email, message) are required.');",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Language",
														"value": "en",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"test@simon-neidig.de\",\n    \"message\": \"This is a test message.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{contact-endpoint}}",
													"host": [
														"{{contact-endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "No email",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Contact / Single / POST / EN / No email - Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Contact / Single / POST / EN / No email - Error message as expected\", function () {",
															"    pm.expect(body.detail).to.eql('All fields (name, email, message) are required.');",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Language",
														"value": "en",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Testuser\",\n    \"message\": \"This is a test message.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{contact-endpoint}}",
													"host": [
														"{{contact-endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Invalid email",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Contact / Single / POST / EN / Invalid email - Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Contact / Single / POST / EN / Invalid email - Error message as expected\", function () {",
															"    pm.expect(body.detail).to.eql('value is not a valid email address: An email address must have an @-sign.');",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Language",
														"value": "en",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Testuser\",\n    \"email\": \"test\",\n    \"message\": \"This is a test message.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{contact-endpoint}}",
													"host": [
														"{{contact-endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "No message",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Contact / Single / POST / EN / No message - Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Contact / Single / POST / EN / No message - Error message as expected\", function () {",
															"    pm.expect(body.detail).to.eql('All fields (name, email, message) are required.');",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Language",
														"value": "en",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Testuser\",\n    \"email\": \"test@simon-neidig.de\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{contact-endpoint}}",
													"host": [
														"{{contact-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "FR",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Contact / Single / POST / FR / Successful request - Status code is 201\", function () {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"pm.test(\"Contact / Single / POST / FR / Successful request - Attribute 'name' correctly returned\", function () {",
															"    pm.expect(body.name).to.eql('Testuser');",
															"});",
															"",
															"pm.test(\"Contact / Single / POST / FR / Successful request - Attribute 'email' correctly returned\", function () {",
															"    pm.expect(body.email).to.eql('test@simon-neidig.de');",
															"});",
															"",
															"pm.test(\"Contact / Single / POST / FR / Successful request - Attribute 'message' correctly returned\", function () {",
															"    pm.expect(body.message).to.eql('This is a test message.');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Language",
														"value": "fr",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Testuser\",\n    \"email\": \"test@simon-neidig.de\",\n    \"message\": \"This is a test message.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{contact-endpoint}}",
													"host": [
														"{{contact-endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "No name",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Contact / Single / POST / FR / No name - Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Contact / Single / POST / FR / No name - Error message as expected\", function () {",
															"    pm.expect(body.detail).to.eql('All fields (name, email, message) are required.');",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Language",
														"value": "fr",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"test@simon-neidig.de\",\n    \"message\": \"This is a test message.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{contact-endpoint}}",
													"host": [
														"{{contact-endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "No email",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Contact / Single / POST / FR / No email - Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Contact / Single / POST / FR / No email - Error message as expected\", function () {",
															"    pm.expect(body.detail).to.eql('All fields (name, email, message) are required.');",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Language",
														"value": "fr",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Testuser\",\n    \"message\": \"This is a test message.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{contact-endpoint}}",
													"host": [
														"{{contact-endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Invalid email",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Contact / Single / POST / FR / Invalid email - Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Contact / Single / POST / FR / Invalid email - Error message as expected\", function () {",
															"    pm.expect(body.detail).to.eql('value is not a valid email address: An email address must have an @-sign.');",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Language",
														"value": "fr",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Testuser\",\n    \"email\": \"test\",\n    \"message\": \"This is a test message.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{contact-endpoint}}",
													"host": [
														"{{contact-endpoint}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "No message",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Contact / Single / POST / FR / No message - Status code is 400\", function () {",
															"    pm.response.to.have.status(400);",
															"});",
															"",
															"pm.test(\"Contact / Single / POST / FR / No message - Error message as expected\", function () {",
															"    pm.expect(body.detail).to.eql('All fields (name, email, message) are required.');",
															"});",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept-Language",
														"value": "fr",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Testuser\",\n    \"email\": \"test@simon-neidig.de\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{contact-endpoint}}",
													"host": [
														"{{contact-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "No language",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var body = pm.response.json()",
													"",
													"pm.test(\"Contact / Single / POST / No language - Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"pm.test(\"Contact / Single / POST / No language - Attribute 'name' correctly returned\", function () {",
													"    pm.expect(body.name).to.eql('Testuser');",
													"});",
													"",
													"pm.test(\"Contact / Single / POST / No language - Attribute 'email' correctly returned\", function () {",
													"    pm.expect(body.email).to.eql('test@simon-neidig.de');",
													"});",
													"",
													"pm.test(\"Contact / Single / POST / No language - Attribute 'message' correctly returned\", function () {",
													"    pm.expect(body.message).to.eql('This is a test message.');",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Testuser\",\n    \"email\": \"test@simon-neidig.de\",\n    \"message\": \"This is a test message.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{contact-endpoint}}",
											"host": [
												"{{contact-endpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Invalid language",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var body = pm.response.json()",
													"",
													"pm.test(\"Contact / Single / POST / Invalid language - Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Contact / Single / POST / Invalid language - Error message as expected\", function () {",
													"    pm.expect(body.detail).to.eql(\"Language 'abc' not found in the database.\");",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept-Language",
												"value": "abc",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Testuser\",\n    \"email\": \"test@simon-neidig.de\",\n    \"message\": \"This is a test message.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{contact-endpoint}}",
											"host": [
												"{{contact-endpoint}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Education",
			"item": [
				{
					"name": "All",
					"item": [
						{
							"name": "GET",
							"item": [
								{
									"name": "DE",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Education / All / GET / DE / Successful request - Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Education / All / GET / DE / Successful request - Response type is an array\", function () {",
															"    pm.expect(body).to.be.an('array');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "de",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{education-endpoint}}",
													"host": [
														"{{education-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "EN",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Education / All / GET / EN / Successful request - Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Education / All / GET / EN / Successful request - Response type is an array\", function () {",
															"    pm.expect(body).to.be.an('array');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "en",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{education-endpoint}}",
													"host": [
														"{{education-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "FR",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Education / All / GET / FR / Successful request - Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Education / All / GET / FR / Successful request - Response type is an array\", function () {",
															"    pm.expect(body).to.be.an('array');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "fr",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{education-endpoint}}",
													"host": [
														"{{education-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Experience",
			"item": [
				{
					"name": "All",
					"item": [
						{
							"name": "GET",
							"item": [
								{
									"name": "DE",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Experience / All / GET / DE / Successful request - Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Experience / All / GET / DE / Successful request - Response type is an array\", function () {",
															"    pm.expect(body).to.be.an('array');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "de",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{experience-endpoint}}",
													"host": [
														"{{experience-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "EN",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Experience / All / GET / EN / Successful request - Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Experience / All / GET / EN / Successful request - Response type is an array\", function () {",
															"    pm.expect(body).to.be.an('array');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "en",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{experience-endpoint}}",
													"host": [
														"{{experience-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "FR",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Experience / All / GET / FR / Successful request - Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Experience / All / GET / FR / Successful request - Response type is an array\", function () {",
															"    pm.expect(body).to.be.an('array');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "fr",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{experience-endpoint}}",
													"host": [
														"{{experience-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Expertise",
			"item": [
				{
					"name": "All",
					"item": [
						{
							"name": "GET",
							"item": [
								{
									"name": "DE",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Expertise / All / GET / DE / Successful request - Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Expertise / All / GET / DE / Successful request - Response type is an array\", function () {",
															"    pm.expect(body).to.be.an('array');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "de",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{expertise-endpoint}}",
													"host": [
														"{{expertise-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "EN",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Expertise / All / GET / EN / Successful request - Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Expertise / All / GET / EN / Successful request - Response type is an array\", function () {",
															"    pm.expect(body).to.be.an('array');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "en",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{expertise-endpoint}}",
													"host": [
														"{{expertise-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "FR",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Expertise / All / GET / FR / Successful request - Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Expertise / All / GET / FR / Successful request - Response type is an array\", function () {",
															"    pm.expect(body).to.be.an('array');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "fr",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{expertise-endpoint}}",
													"host": [
														"{{expertise-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Page",
			"item": [
				{
					"name": "All",
					"item": [
						{
							"name": "GET",
							"item": [
								{
									"name": "DE",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Page / All / GET / DE / Successful request - Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Page / All / GET / DE / Successful request - Response type is an array\", function () {",
															"    pm.expect(body).to.be.an('array');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "de",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{page-endpoint}}",
													"host": [
														"{{page-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "EN",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Page / All / GET / EN / Successful request - Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Page / All / GET / EN / Successful request - Response type is an array\", function () {",
															"    pm.expect(body).to.be.an('array');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "en",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{page-endpoint}}",
													"host": [
														"{{page-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "FR",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Page / All / GET / FR / Successful request - Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Page / All / GET / FR / Successful request - Response type is an array\", function () {",
															"    pm.expect(body).to.be.an('array');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "fr",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{page-endpoint}}",
													"host": [
														"{{page-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Single",
					"item": [
						{
							"name": "GET",
							"item": [
								{
									"name": "DE",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "de",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{page-endpoint}}/imprint",
													"host": [
														"{{page-endpoint}}"
													],
													"path": [
														"imprint"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "EN",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "en",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{page-endpoint}}/imprint",
													"host": [
														"{{page-endpoint}}"
													],
													"path": [
														"imprint"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "FR",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "fr",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{page-endpoint}}/imprint",
													"host": [
														"{{page-endpoint}}"
													],
													"path": [
														"imprint"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Not found",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var body = pm.response.json()",
													"",
													"pm.test(\"Page / Single / GET / Not found - Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Page / Single / GET / Not found - Error message as expected\", function () {",
													"    pm.expect(body.detail).to.eql('Page not found');",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept-Language",
												"value": "de",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{page-endpoint}}/asdf",
											"host": [
												"{{page-endpoint}}"
											],
											"path": [
												"asdf"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Personal Details",
			"item": [
				{
					"name": "Single",
					"item": [
						{
							"name": "GET",
							"item": [
								{
									"name": "DE",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Personal Details / All / GET / DE / Successful request - Response type is an object\", function () {",
															"    pm.expect(body).to.be.an('object');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "de",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{personal-details-endpoint}}",
													"host": [
														"{{personal-details-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "EN",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"",
															"pm.test(\"Personal Details / All / GET / EN / Successful request - Response type is an object\", function () {",
															"    pm.expect(body).to.be.an('object');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "en",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{personal-details-endpoint}}",
													"host": [
														"{{personal-details-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "FR",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"",
															"pm.test(\"Personal Details / All / GET / FR / Successful request - Response type is an object\", function () {",
															"    pm.expect(body).to.be.an('object');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "fr",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{personal-details-endpoint}}",
													"host": [
														"{{personal-details-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Personal Information",
			"item": [
				{
					"name": "All",
					"item": [
						{
							"name": "GET",
							"item": [
								{
									"name": "DE",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Personal Information / All / GET / DE / Successful request - Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Personal Information / All / GET / DE / Successful request - Response type is an array\", function () {",
															"    pm.expect(body).to.be.an('array');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "de",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{personal-information-endpoint}}",
													"host": [
														"{{personal-information-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "EN",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Personal Information / All / GET / EN / Successful request - Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Personal Information / All / GET / EN / Successful request - Response type is an array\", function () {",
															"    pm.expect(body).to.be.an('array');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "en",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{personal-information-endpoint}}",
													"host": [
														"{{personal-information-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "FR",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Personal Information / All / GET / FR / Successful request - Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Personal Information / All / GET / FR / Successful request - Response type is an array\", function () {",
															"    pm.expect(body).to.be.an('array');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "fr",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{personal-information-endpoint}}",
													"host": [
														"{{personal-information-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Works",
			"item": [
				{
					"name": "All",
					"item": [
						{
							"name": "GET",
							"item": [
								{
									"name": "DE",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Work / All / GET / DE / Successful request - Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Work / All / GET / DE / Successful request - Response type is an array\", function () {",
															"    pm.expect(body).to.be.an('array');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "de",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{work-endpoint}}",
													"host": [
														"{{work-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "EN",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Work / All / GET / EN / Successful request - Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Work / All / GET / EN / Successful request - Response type is an array\", function () {",
															"    pm.expect(body).to.be.an('array');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "en",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{work-endpoint}}",
													"host": [
														"{{work-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "FR",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Work / All / GET / FR / Successful request - Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Work / All / GET / FR / Successful request - Response type is an array\", function () {",
															"    pm.expect(body).to.be.an('array');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "fr",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{work-endpoint}}",
													"host": [
														"{{work-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Single",
					"item": []
				}
			]
		},
		{
			"name": "Social Media",
			"item": [
				{
					"name": "All",
					"item": [
						{
							"name": "GET",
							"item": [
								{
									"name": "DE",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Social Media / All / GET / DE / Successful request - Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Social Media / All / GET / DE / Successful request - Response type is an array\", function () {",
															"    pm.expect(body).to.be.an('array');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "de",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{social-media-endpoint}}",
													"host": [
														"{{social-media-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "EN",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Social Media / All / GET / EN / Successful request - Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Social Media / All / GET / EN / Successful request - Response type is an array\", function () {",
															"    pm.expect(body).to.be.an('array');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "en",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{social-media-endpoint}}",
													"host": [
														"{{social-media-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "FR",
									"item": [
										{
											"name": "Successful request",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var body = pm.response.json()",
															"",
															"pm.test(\"Social Media / All / GET / FR / Successful request - Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Social Media / All / GET / FR / Successful request - Response type is an array\", function () {",
															"    pm.expect(body).to.be.an('array');",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept-Language",
														"value": "fr",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{social-media-endpoint}}",
													"host": [
														"{{social-media-endpoint}}"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.collectionVariables.set(\"collection-base-url\", pm.environment.get(\"base-url\"));"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "collection-base-url",
			"value": "",
			"type": "string"
		},
		{
			"key": "contact-endpoint",
			"value": "{{collection-base-url}}/contact",
			"type": "string"
		},
		{
			"key": "education-endpoint",
			"value": "{{collection-base-url}}/education",
			"type": "string"
		},
		{
			"key": "experience-endpoint",
			"value": "{{collection-base-url}}/experience",
			"type": "string"
		},
		{
			"key": "expertise-endpoint",
			"value": "{{collection-base-url}}/expertise",
			"type": "string"
		},
		{
			"key": "page-endpoint",
			"value": "{{collection-base-url}}/page",
			"type": "string"
		},
		{
			"key": "personal-details-endpoint",
			"value": "{{collection-base-url}}/personal-details",
			"type": "string"
		},
		{
			"key": "personal-information-endpoint",
			"value": "{{collection-base-url}}/personal-information",
			"type": "string"
		},
		{
			"key": "social-media-endpoint",
			"value": "{{collection-base-url}}/social-media",
			"type": "string"
		},
		{
			"key": "work-endpoint",
			"value": "{{collection-base-url}}/work",
			"type": "string"
		}
	]
}